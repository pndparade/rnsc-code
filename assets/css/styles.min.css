/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}:root{--font-family:"Montserrat","Arial","Helvetica",sans-serif;--font-size:16px;--page-padding-inline:20px;--header-height:100px;--white:#ffffff;--blue-light:#F2F9FF;--blue-middle:#007FFF;--blue-dark:#002040;--gradient-blue:linear-gradient(180deg, #409FFF 0%, #007FFF 100%);--button-shadow:0px -2px 0px 0px rgba(0, 32, 64, 0.10) inset,0px 2px 0px 0px rgba(255, 255, 255, 0.25) inset,0px 10px 10px 0px rgba(0, 32, 64, 0.10);--block-shadow:0px 20px 20px 0px rgba(0, 63, 128, 0.05)}.header__menu{margin:0;padding:0;list-style:none}*,::after,::before{box-sizing:border-box}html{height:100%;font-family:var(--font-family);font-size:var(--font-size);font-variant-numeric:lining-nums proportional-nums}.block{width:100px;height:100px;background:grey url(../images/sprite.svg#car) no-repeat}.button{-webkit-appearance:none;-moz-appearance:none;appearance:none;display:inline-flex;align-items:center;justify-content:center;gap:25px;width:100%;padding:30px 60px;font-weight:700;text-decoration:none;color:var(--white);border-radius:80px;box-shadow:var(--button-shadow)}.button.button--primary{background:var(--gradient-blue)}.button.button--primary:hover{background:var(--blue-middle)}.button.button--square{border-radius:10px}.container{max-width:1280px;margin:0 auto;padding-inline:var(--page-padding-inline)}@media only screen and (width >= 1024px){.cover{height:600px;padding-top:var(--header-height);margin-top:calc(var(--header-height) * -1);background:url(../images/lead-bg.jpg) no-repeat center top}}@media only screen and (width >= 1280px){.cover{height:800px}}.cover .container{padding:0}@media only screen and (width >= 1024px){.cover__layout{display:grid;grid-template-columns:repeat(12,1fr);align-items:center;height:100%}}.cover__img{display:block;height:250px}@media only screen and (width >= 1024px){.cover__img{display:none}}.cover__img img{width:100%;height:100%;-o-object-fit:cover;object-fit:cover}.cover__text{padding:40px var(--page-padding-inline) 80px;background:#fff}@media only screen and (width >= 1024px){.cover__text{background:0 0;padding-bottom:40px;grid-column:span 7}}.cover__text p{margin:15px 0 0 0}.cover__title{margin:0;font-size:36px;font-weight:500;text-wrap:balance}.cover__action{margin-top:20px;display:flex;flex-direction:column;gap:10px}@media only screen and (width >= 768px){.cover__action{flex-direction:row}}@media only screen and (width >= 1024px){.cover__action{flex-direction:column;align-items:flex-start}.cover__action .button{width:340px}}@media only screen and (width >= 1280px){.cover__action{flex-direction:row}.cover__action .button{width:auto}}.feature{width:440px;position:relative;border-radius:10px;overflow:hidden}@media only screen and (width >= 768px){.feature{width:400px;height:400px;cursor:pointer}.feature:hover .feature__text{max-height:200px}}.feature__img{position:absolute;top:0;left:0;width:100%;height:120px;z-index:-1}@media only screen and (width >= 768px){.feature__img{height:100%}}.feature__img::before{content:"";position:absolute;top:0;left:0;bottom:0;right:0;background-color:#002040;opacity:.5}.feature__img img{display:block;width:100%;height:100%;-o-object-fit:cover;object-fit:cover}@media only screen and (width >= 768px){.feature__content{padding:40px;height:100%;display:flex;flex-direction:column;justify-content:center;align-items:center;text-align:center;gap:10px}}.feature__header{height:120px;display:flex;align-items:center;justify-content:space-between;gap:30px;padding:40px;color:var(--white)}.feature__header.is-open+.feature__text{display:block}@media only screen and (width >= 768px){.feature__header{height:auto;display:block;padding:0}}@media only screen and (width >= 768px){.feature__icon img{width:80px;height:80px}}@media only screen and (width >= 768px){.feature__arrow{display:none}}.feature__title{flex-grow:1;font-size:24px;font-weight:600}.feature__text{display:none;padding:40px;background-color:#fff}@media only screen and (width >= 768px){.feature__text{display:block;max-height:0;overflow:hidden;background:0 0;color:var(--white);padding:0;transition:max-height .4s ease}}.footer{padding:20px 0;color:var(--white);background-color:var(--blue-dark)}.header{position:relative;background-color:rgba(255,255,255,.5);-webkit-backdrop-filter:blur(3px);backdrop-filter:blur(3px)}.header__row{display:flex;justify-content:space-between;align-items:center;height:var(--header-height)}.header__logo img{display:block}.header__content{display:none;position:absolute;left:0;top:var(--header-height);width:100%;padding-block:40px;background-color:var(--white);text-align:center}@media only screen and (width >= 1280px){.header__content{position:static;display:flex;justify-content:space-between;align-items:center;background-color:transparent}}@media only screen and (width >= 1280px){.header__menu{display:flex}}.header__menu-toggle{-webkit-appearance:none;-moz-appearance:none;appearance:none;display:flex;justify-content:center;align-items:center;gap:10px;padding:10px 20px;font-weight:600;line-height:1.25em;color:var(--white);border:none;border-radius:80px;background:var(--gradient-blue);box-shadow:var(--button-shadow);cursor:pointer}.header__menu-toggle.is-open~.header__content{display:block}@media only screen and (width >= 1280px){.header__menu-toggle{display:none}}.page-title{margin:0 0 60px;font-size:36px;font-weight:500;text-align:center}.page{display:grid;grid-template-rows:auto 1fr auto;min-height:100%;color:var(--blue-dark);background-color:var(--blue-light)}.page.page--mainpage .page__content{padding-top:0}.page__content{padding-top:80px;padding-bottom:160px}.project-list{display:grid;row-gap:20px}.project{padding:10px 10px 20px;background-color:var(--white);border-radius:20px;box-shadow:var(--block-shadow)}@media only screen and (width >= 1024px){.project{display:grid;grid-template-columns:repeat(2,1fr);-moz-column-gap:40px;column-gap:40px;padding:10px}}@media only screen and (width >= 1280px){.project{grid-template-columns:repeat(3,1fr)}}.project__img{margin-bottom:20px}@media only screen and (width >= 1024px){.project__img{margin-bottom:0;position:relative}.project__img img{position:absolute;top:0;left:0;width:100%;height:100%;-o-object-fit:cover;object-fit:cover}}@media only screen and (width >= 1280px){.project__img{grid-column:span 2}}.project__img img{display:block;width:100%;border-radius:10px}@media only screen and (width >= 1024px){.project__main{padding:40px 30px 40px 0}}.project__name{margin:0 0 20px;font-size:24px}.project__title{margin:0 0 20px;font-size:24px}.project__data+.project__data{margin-top:10px}.project__action{margin-top:40px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
